@model List<TaskDto>

<h2 class="text-center">To Do List</h2>

<div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <label for="exampleInputName" class="form-label">Name</label>
                        <input id="task-name" type="text" class="form-control">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button id="add-task" type="button" class="btn btn-primary">Add</button>
            </div>
        </div>
    </div>
</div>

<table class="table" id="tblOne">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Id</th>
            <th scope="col">Name</th>
            <th scope="col">Processes</th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.Count; i++)
        {
            <tr id="@Model[i].Id">
                <th class="sec" scope="row">@i</th>
                <td>@Model[i].Id</td>
                <td><input type="text" class="form-control update-task-@Model[i].Id" old-value="@Model[i].Name" value="@Model[i].Name"></td>
                <td>
                    <button type="button" class="btn btn-info update-task" task-id="@Model[i].Id">Update</button>
                    <button type="button" class="btn btn-danger remove-task" task-name="@Model[i].Name" task-id="@Model[i].Id">Remove</button>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="row">
    <button type="button" class="btn btn-primary ml-auto" data-toggle="modal" data-target="#createModal">
        Add Task
    </button>
</div>

@section Scripts {
    <script>
        $("#add-task").click(function () {
            var data = { name: $("#task-name").val() };

            GenericAjaxMethod("/Home/Create", 'POST', data, onSuccess, onError);

            function onSuccess(data) {
                console.log(data);
                if (data && data != undefined && data != '' && data != null && data != 'null') {
                    if (data.errors && data.errors != undefined && data.errors != '' && data.errors != null) {
                        alert(data.errors);
                    }
                    else {
                        var x = JSON.parse(data)
                        var nextId = parseInt($('table tbody tr:last th').html());
                        $('table tbody').append('<tr id="' + x.Id + '"><th>' + (nextId + 1) + '</th><td>' + x.Id + '</td><td><input type="text" class="form-control update-task-' + x.Id + '" old-value="' + x.Name + '" value="' + x.Name + '"></td><td><button type="button" class="btn btn-info update-task" task-name="' + x.Name + '" task-id="' + x.Id + '">Update</button> <button type="button" class="btn btn-danger remove-task" task-name="' + x.Name + '" task-id="' + x.Id + '">Remove</button></td></tr>');
                        $('#createModal').modal('hide')
                        $('#task-name').val('')
                    }
                }
                else {
                    alert("unexpected error.");
                }
            }

            function onError(data) {
                console.log(data);
                alert(data?.responseText);
            }
        });

        $("body").on("click", ".remove-task", function () {
            var id = $(this).attr("task-id");
            var data = { id: id };

            GenericAjaxMethod("/Home/Delete", 'DELETE', data, onSuccess, onError);

            function onSuccess(data) {
                console.log(data);
                if (data && data != undefined && data != '' && data != null && data != 'null') {
                    if (data.errors && data.errors != undefined && data.errors != '' && data.errors != null) {
                        alert(data.errors);
                    }
                    else {
                        $("#" + id).remove();
                        var table = document.getElementById('tblOne');

                        var rowLength = table.rows.length - 1;

                        for (var i = 0; i < rowLength; i += 1) {
                            var row = table.rows[(i + 1)];
                            $(row).find("th").html(i)
                        }
                    }
                }
                else {
                    alert("unexpected error.");
                }
            }

            function onError(data) {
                console.log(data);
                alert(data?.responseText);
            }
        });


        $("body").on("click", ".update-task", function () {
            var id = $(this).attr("task-id");
            var name = $(".update-task-" + id + "").val();
            var data = { id: id, name: name };

            GenericAjaxMethod("/Home/Update", 'PUT', data, onSuccess, onError);

            function onSuccess(data) {
                console.log(data);
                if (data && data != undefined && data != '' && data != null && data != 'null') {
                    if (data.errors && data.errors != undefined && data.errors != '' && data.errors != null) {
                        alert(data.errors);
                    }
                    else {
                        $(".update-task-" + id + "").attr("old-value", name);
                        alert('successful - ' + name + '');
                    }
                }
                else {
                    var oldValue = $(".update-task-" + id + "").attr("old-value");
                    $(".update-task-" + id + "").val(oldValue);
                    alert("unexpected error.");
                }
            }

            function onError(data) {
                var oldValue = $(".update-task-" + id + "").attr("old-value");
                $(".update-task-" + id + "").val(oldValue);
                console.log(data);
                alert(data?.responseText);
            }
        });
    </script>
}